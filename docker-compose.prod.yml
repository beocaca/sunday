version: "3.7"
services:
  nginx:
    image: nginx:alpine
    container_name: sunday-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - sunday
  sunday-proxy:
    image: jwilder/nginx-proxy
    container_name: sunday-proxy
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./docker-compose/nginx:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
    networks:
      - sunday
  ssl-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: ssl-companion
    volumes:
      - ./docker-compose/nginx:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from:
      - sunday-proxy
    depends_on:
      - sunday-proxy
  web:
    build:
      args:
        user: 'sunday'
        uid: 1000
        TZ: America\New_York
      context: ./
      dockerfile: Dockerfile
    image: sunday
    container_name: sunday-app
    restart: unless-stopped
    working_dir: /var/www/
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST=daily.icservice-soft.com
      - VIRTUAL_PORT=9000
      - LETSENCRYPT_HOST=daily.icservice-soft.com
      - LETSENCRYPT_EMAIL=jesusant.guerrero@gmail.com
    volumes:
      - ./:/var/www
      - ./docker-compose/web/timezone:/etc/timezone
      - ./docker-compose/web/cron/scheduler-cron:/etc/cron.d/scheduler-cron
      - sunday_db:/var/lib/mysql
    networks:
      - sunday
  db:
    image: mysql:5.7
    container_name: sunday-db
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
      - sunday_db:/var/lib/mysql
      - ./docker-compose/mysql:/home/root/cache/
    networks:
      - sunday
  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - ./docker-compose/redis:/data
    networks:
      - sunday
networks:
  sunday:
    driver: bridge
volumes:
  sunday_db:
    driver: local
